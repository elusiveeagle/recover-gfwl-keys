name: PS Compatibility Matrix

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

jobs:
  test-powershell-5.1:
    name: Test Windows PowerShell 5.1
    runs-on: windows-2022

    steps:
      - uses: actions/checkout@v4

      - name: Run script
        shell: powershell
        run: |
          Write-Host "â†’ Testing script with Windows PowerShell $($PSVersionTable.PSVersion) (CLR version $($PSVersionTable.CLRVersion))"
          .\Recover-GFWLKeys.ps1
          if ($LASTEXITCODE -ne 0) { exit $LASTEXITCODE }

  test-powershell-core:
    name: Test PowerShell Core ${{ matrix.ps-version }}
    runs-on: windows-latest

    strategy:
      matrix:
        ps-version:
          - 6.0.0
          # - 6.1.0
          # - 6.2.0
          - 7.0.0
          # - 7.1.0
          # - 7.2.0
          # - 7.3.0
          # - 7.4.0
          # - 7.5.0

    steps:
      - uses: actions/checkout@v4

      - name: Install PowerShell Core ${{ matrix.ps-version }}
        uses: PSModule/install-powershell@v1
        with:
          Version: ${{ matrix.ps-version }}

      - name: Extract major version
        id: extract
        shell: cmd
        run: |
          set "fullVersion=${{ matrix.ps-version }}"
          for /F "tokens=1 delims=." %%A in ("%fullVersion%") do (
            echo major=%%A>>%GITHUB_OUTPUT%
          )

      - name: Run script under PS Core ${{ matrix.ps-version }}
        shell: cmd
        run: |
          echo Testing script with PowerShell Core ${{ matrix.ps-version }} (Windows)

          "C:\Program Files\PowerShell\${{ steps.extract.outputs.major }}\pwsh.exe" ^
            -NoProfile ^
            -File .\Recover-GFWLKeys.ps1
          IF %ERRORLEVEL% NEQ 0 EXIT /B %ERRORLEVEL%
